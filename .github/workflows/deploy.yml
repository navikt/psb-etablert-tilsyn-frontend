name: Deploy Docker image
on:
    push:
        branches:
            - main
        paths:
            - 'build/**'
            - '.github/workflows/deploy.yml'
            - 'package.json'
    workflow_dispatch:

env:
    IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/psb-etablert-tilsyn-frontend

jobs:
    deploy-docker-image:
        name: Deploy Docker image
        runs-on: ubuntu-latest
        steps:
            - name: Hente kode
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Sette opp Node
              uses: actions/setup-node@v2.1.2
              with:
                  node-version: 12.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@navikt'
            - name: Installere dependencies
              run: npm install
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Kjøre enhetstester
              run: npm test
            - name: Sette versjon
              run: |
                  echo "MAJOR_VERSION=$(npm run majorVersion --silent)" >> $GITHUB_ENV
            - name: Sette tag
              run: |
                  echo "TAG=$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            - name: Sette miljøvariabler
              run: |
                  echo "IMAGE=${IMAGE_BASE}:${TAG}" >> $GITHUB_ENV
                  echo "LATEST=${IMAGE_BASE}:latest" >> $GITHUB_ENV
                  echo "CSS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/styles.css | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
                  echo "JS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/app.js | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
            - name: Bygg og laste opp docker-image
              run: |
                  docker build --tag ${IMAGE} --tag ${LATEST} .
                  echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
                  docker push ${IMAGE}
                  docker push ${LATEST}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Deploy til dev-fss
              uses: nais/deploy/actions/deploy@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: nais/naiserator.yml
                  VARS: nais/dev-fss.json
            - name: Deploy til prod-fss
              if: github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'ci skip')
              uses: nais/deploy/actions/deploy@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-fss
                  RESOURCE: nais/naiserator.yml
                  VARS: nais/prod-fss.json
            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.TAG }}
                  release_name: ${{ env.TAG }}
                  body: |
                      For JS, add this to your app:
                      ```
                      <script
                        type="text/javascript"
                        src="https://psb-etablert-tilsyn-frontend.dev.adeo.no/${{ env.MAJOR_VERSION }}/app.js"
                        integrity="sha384-${{ env.JS_HASH }}"
                        crossorigin="anonymous"
                      ></script>
                      ```

                      For CSS, add this to the `<head>` of your app:
                      ```
                      <link
                        rel="stylesheet"
                        href="https://psb-etablert-tilsyn-frontend.dev.adeo.no/${{ env.MAJOR_VERSION }}/styles.css"
                        integrity="sha384-${{ env.CSS_HASH }}"
                        crossorigin="anonymous"
                      >
                      ```
                  draft: false
                  prerelease: false
